---
- hosts: apigee
  vars:
    apigee_license_file_name: license.txt
    apigee_source_path: ../config
    apigee_dest_path: /tmp/apigee
    apigee_config_file_name: config.txt
    apigee_prod_config_file_name: setup-org-prod.txt
    apigee_test_config_file_name: setup-org-test.txt
    apigee_health_config_file_name: setup-health-test.txt
    apigee_health_proxy_file_name: healthcheck.zip
  tasks:
  - name: yum clean all
    command: "yum clean all"
    sudo: yes
  - name: yum install libselinux-python
    command: "yum install libselinux-python -y"
    sudo: yes
  - name: Limits change
    become_method: sudo
    lineinfile:
      dest=/etc/security/limits.conf
      line='{{ item }}'
    with_items:
      - 'apigee soft memlock unlimited'
      - 'apigee hard memlock unlimited'
      - 'apigee soft nofile 32768'
      - 'apigee hard nofile 65536'
      - 'apigee soft as unlimited'
      - 'apigee hard as unlimited'
    sudo: yes
  - name: Selinux status
    shell: selinuxenabled && echo enabled || echo disabled
    sudo: yes
    register: selinuxstatus
  - name: Print selinux status
    debug: msg="selinux version is {{ selinuxstatus.stdout }}"
    sudo: yes
    ignore_errors: true
    when: selinuxstatus.changed
  - name: disable SELinux
    selinux: state=disabled
    sudo: yes
    when: ("{{ selinuxstatus.stdout }} == 'enabled'" or "{{ selinuxstatus.stdout }} == 'permissive'")
    register: st
    ignore_errors: true
    when: selinuxstatus.changed
  - name: reboot if SELinux changed
    shell: shutdown -r +1 "SELinux disable triggered"
    sudo: yes
    async: 1
    poll: 0
    ignore_errors: true
    when: st.changed
  - name: waiting for server to reboot
    local_action: wait_for host="{{ ansible_ssh_host | default(inventory_hostname) }}" port={{ ansible_ssh_port | default(22) }} search_regex=OpenSSH state=started delay=30 timeout=300
    sudo: false
    ignore_errors: true
    when: st.changed
  - name: Create dest folder
    command: "mkdir -p {{ apigee_dest_path }}"
    sudo: yes
  - name: Log Files
    command: "{{ item }}"
    with_items:
    - "mkdir -p {{ apigee_dest_path }}/log"
    - "ln -Ts /tmp/setup-root.log {{ apigee_dest_path }}/log/setup-root.log"
    sudo: yes
  - name: copy license file
    copy: src={{apigee_source_path}}/{{apigee_license_file_name}}
        dest={{apigee_dest_path}}/{{apigee_license_file_name}} force=yes
    sudo: yes
  - name: copy config file
    copy: src={{apigee_source_path}}/{{apigee_config_file_name}}
        dest={{apigee_dest_path}}/{{apigee_config_file_name}} force=yes
    sudo: yes
  - name: copy setup-org prod file
    copy: src={{apigee_source_path}}/{{apigee_prod_config_file_name}}
        dest={{apigee_dest_path}}/{{apigee_prod_config_file_name}} force=yes
    sudo: yes
  - name: copy setup-org test file
    copy: src={{apigee_source_path}}/{{apigee_test_config_file_name}}
        dest={{apigee_dest_path}}/{{apigee_test_config_file_name}} force=yes
    sudo: yes
  - name: copy setup-org health file
    copy: src={{apigee_source_path}}/{{apigee_health_config_file_name}}
        dest={{apigee_dest_path}}/{{apigee_health_config_file_name}} force=yes
    sudo: yes
  - name: copy setup-org health proxy
    copy: src={{apigee_source_path}}/{{apigee_health_proxy_file_name}}
        dest={{apigee_dest_path}}/{{apigee_health_proxy_file_name}} force=yes
    sudo: yes

